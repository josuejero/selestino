### Project Summary ###

Project: Recipe Website for Peruvian Dishes
Description: A web application where users can input ingredients and receive Peruvian dish recipes.

### Software and Tools ###
Python: Python 3.12.4
Django: 5.0.7
Java: openjdk version "17.0.4.1" 2022-08-12
Spring: Spring CLI v3.3.2
PostgreSQL: psql (PostgreSQL) 14.12 (Homebrew)
Docker: Docker version 27.1.1, build 6312585
Kubectl: Kubectl version not found
AWS CLI: aws-cli/2.17.22 Python/3.11.9 Darwin/23.6.0 source/arm64
Google Cloud SDK: Google Cloud SDK 486.0.0
Jenkins: 2.470
Git: git version 2.46.0

### Project Directory Structure ###
.
├── Dockerfile
├── db.sqlite3
├── docker-compose.yml
├── manage.py
├── pom.xml
├── problem.py
├── project_overview.txt
├── recipes
│   ├── __init__.py
│   ├── __pycache__
│   │   ├── __init__.cpython-312.pyc
│   │   ├── admin.cpython-312.pyc
│   │   ├── apps.cpython-312.pyc
│   │   ├── models.cpython-312.pyc
│   │   └── views.cpython-312.pyc
│   ├── admin.py
│   ├── apps.py
│   ├── migrations
│   │   ├── 0001_initial.py
│   │   ├── __init__.py
│   │   └── __pycache__
│   │       ├── 0001_initial.cpython-312.pyc
│   │       └── __init__.cpython-312.pyc
│   ├── models.py
│   ├── static
│   │   └── recipes
│   │       └── styles.css
│   ├── templates
│   │   └── recipes
│   │       ├── home.html
│   │       ├── search.html
│   │       └── search_results.html
│   ├── tests.py
│   └── views.py
├── requirements.txt
├── selestino_django
│   ├── __init__.py
│   ├── __pycache__
│   │   ├── __init__.cpython-312.pyc
│   │   ├── settings.cpython-312.pyc
│   │   ├── urls.cpython-312.pyc
│   │   └── wsgi.cpython-312.pyc
│   ├── asgi.py
│   ├── settings.py
│   ├── urls.py
│   └── wsgi.py
├── src
│   ├── main
│   │   ├── java
│   │   └── resources
│   └── test
│       └── java
│           └── SampleTest.java
├── target
│   ├── classes
│   ├── generated-sources
│   │   └── annotations
│   ├── generated-test-sources
│   │   └── test-annotations
│   ├── maven-archiver
│   │   └── pom.properties
│   ├── maven-status
│   │   └── maven-compiler-plugin
│   │       ├── compile
│   │       │   └── default-compile
│   │       └── testCompile
│   │           └── default-testCompile
│   ├── selestino-1.0-SNAPSHOT.jar
│   └── test-classes
│       └── SampleTest.class
└── venv
    ├── bin
    │   ├── Activate.ps1
    │   ├── activate
    │   ├── activate.csh
    │   ├── activate.fish
    │   ├── django-admin
    │   ├── pip
    │   ├── pip3
    │   ├── pip3.12
    │   ├── python -> python3.12
    │   ├── python3 -> python3.12
    │   ├── python3.12 -> /opt/homebrew/opt/python@3.12/bin/python3.12
    │   ├── sqlformat
    │   └── wsdump
    ├── include
    │   └── python3.12
    ├── lib
    │   └── python3.12
    │       └── site-packages
    │           ├── Django-5.0.7.dist-info
    │           ├── PySocks-1.7.1.dist-info
    │           ├── __pycache__
    │           ├── asgiref
    │           ├── asgiref-3.8.1.dist-info
    │           ├── attr
    │           ├── attrs
    │           ├── attrs-24.1.0.dist-info
    │           ├── certifi
    │           ├── certifi-2024.7.4.dist-info
    │           ├── django
    │           ├── h11
    │           ├── h11-0.14.0.dist-info
    │           ├── idna
    │           ├── idna-3.7.dist-info
    │           ├── outcome
    │           ├── outcome-1.3.0.post0.dist-info
    │           ├── pip
    │           ├── pip-24.2.dist-info
    │           ├── selenium
    │           ├── selenium-4.23.1.dist-info
    │           ├── sniffio
    │           ├── sniffio-1.3.1.dist-info
    │           ├── socks.py
    │           ├── sockshandler.py
    │           ├── sortedcontainers
    │           ├── sortedcontainers-2.4.0.dist-info
    │           ├── sqlparse
    │           ├── sqlparse-0.5.1.dist-info
    │           ├── trio
    │           ├── trio-0.26.1.dist-info
    │           ├── trio_websocket
    │           ├── trio_websocket-0.11.1.dist-info
    │           ├── typing_extensions-4.12.2.dist-info
    │           ├── typing_extensions.py
    │           ├── urllib3
    │           ├── urllib3-2.2.2.dist-info
    │           ├── websocket
    │           ├── websocket_client-1.8.0.dist-info
    │           ├── wsproto
    │           └── wsproto-1.2.0.dist-info
    └── pyvenv.cfg

76 directories, 57 files

### Git Repository Status ###
Current Branch: master
Status:
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	deleted:    project-info.txt
	deleted:    project_structure.txt
	deleted:    project_summary.txt
	deleted:    update_project_summary.sh

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	db.sqlite3
	manage.py
	problem.py
	project_overview.txt
	recipes/
	selestino_django/

no changes added to commit (use "git add" and/or "git commit -a")

### Disk Usage ###
Filesystem        Size    Used   Avail Capacity iused ifree %iused  Mounted on
/dev/disk3s1s1   460Gi   9.6Gi    65Gi    13%    404k  677M    0%   /
devfs            203Ki   203Ki     0Bi   100%     702     0  100%   /dev
/dev/disk3s6     460Gi   7.0Gi    65Gi    10%       7  677M    0%   /System/Volumes/VM
/dev/disk3s2     460Gi   5.9Gi    65Gi     9%    1.2k  677M    0%   /System/Volumes/Preboot
/dev/disk3s4     460Gi   2.4Mi    65Gi     1%      53  677M    0%   /System/Volumes/Update
/dev/disk1s2     500Mi   6.0Mi   482Mi     2%       1  4.9M    0%   /System/Volumes/xarts
/dev/disk1s1     500Mi   6.2Mi   482Mi     2%      32  4.9M    0%   /System/Volumes/iSCPreboot
/dev/disk1s3     500Mi   1.5Mi   482Mi     1%      54  4.9M    0%   /System/Volumes/Hardware
/dev/disk3s5     460Gi   372Gi    65Gi    86%    2.6M  677M    0%   /System/Volumes/Data
map auto_home      0Bi     0Bi     0Bi   100%       0     0     -   /System/Volumes/Data/home

### Network Configuration ###
lo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> mtu 16384
	options=1203<RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP>
	inet 127.0.0.1 netmask 0xff000000
	inet6 ::1 prefixlen 128 
	inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 
	nd6 options=201<PERFORMNUD,DAD>
gif0: flags=8010<POINTOPOINT,MULTICAST> mtu 1280
stf0: flags=0<> mtu 1280
anpi0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether be:b3:ae:66:87:e2
	media: none
	status: inactive
anpi1: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether be:b3:ae:66:87:e3
	media: none
	status: inactive
en3: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether be:b3:ae:66:87:c2
	nd6 options=201<PERFORMNUD,DAD>
	media: none
	status: inactive
en4: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether be:b3:ae:66:87:c3
	nd6 options=201<PERFORMNUD,DAD>
	media: none
	status: inactive
en1: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
	options=460<TSO4,TSO6,CHANNEL_IO>
	ether 36:e6:08:00:de:40
	media: autoselect <full-duplex>
	status: inactive
en2: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500
	options=460<TSO4,TSO6,CHANNEL_IO>
	ether 36:e6:08:00:de:44
	media: autoselect <full-duplex>
	status: inactive
bridge0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=63<RXCSUM,TXCSUM,TSO4,TSO6>
	ether 36:e6:08:00:de:40
	Configuration:
		id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0
		maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200
		root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0
		ipfilter disabled flags 0x0
	member: en1 flags=3<LEARNING,DISCOVER>
	        ifmaxaddr 0 port 8 priority 0 path cost 0
	member: en2 flags=3<LEARNING,DISCOVER>
	        ifmaxaddr 0 port 9 priority 0 path cost 0
	nd6 options=201<PERFORMNUD,DAD>
	media: <unknown type>
	status: inactive
ap1: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=6460<TSO4,TSO6,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>
	ether be:3e:53:7d:71:72
	inet6 fe80::bc3e:53ff:fe7d:7172%ap1 prefixlen 64 scopeid 0xb 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect (<unknown type>)
	status: inactive
en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=6460<TSO4,TSO6,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>
	ether 9c:3e:53:7d:71:72
	inet6 fe80::ca0:e57a:d6c3:c08a%en0 prefixlen 64 secured scopeid 0xc 
	inet6 2600:1700:3e00:3a10:4db:2ce3:740c:cf00 prefixlen 64 autoconf secured 
	inet6 2600:1700:3e00:3a10:38da:a1a3:e5d:ea69 prefixlen 64 autoconf temporary 
	inet6 2600:1700:3e00:3a10::32 prefixlen 64 dynamic 
	inet 192.168.1.192 netmask 0xffffff00 broadcast 192.168.1.255
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: active
awdl0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=6460<TSO4,TSO6,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>
	ether aa:b5:41:de:e8:fd
	inet6 fe80::a8b5:41ff:fede:e8fd%awdl0 prefixlen 64 scopeid 0xd 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: active
llw0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=400<CHANNEL_IO>
	ether aa:b5:41:de:e8:fd
	inet6 fe80::a8b5:41ff:fede:e8fd%llw0 prefixlen 64 scopeid 0xe 
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect
	status: inactive
utun0: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1500
	inet6 fe80::7e31:1e17:6e4d:215b%utun0 prefixlen 64 scopeid 0xf 
	nd6 options=201<PERFORMNUD,DAD>
utun1: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 2000
	inet6 fe80::6b04:8187:65c6:6dc5%utun1 prefixlen 64 scopeid 0x10 
	nd6 options=201<PERFORMNUD,DAD>
utun2: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1000
	inet6 fe80::ce81:b1c:bd2c:69e%utun2 prefixlen 64 scopeid 0x11 
	nd6 options=201<PERFORMNUD,DAD>
utun3: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
	inet6 fe80::8340:3969:11b1:60c5%utun3 prefixlen 64 scopeid 0x12 
	nd6 options=201<PERFORMNUD,DAD>
utun4: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
	inet6 fe80::8c8:778d:d988:a745%utun4 prefixlen 64 scopeid 0x13 
	nd6 options=201<PERFORMNUD,DAD>
utun5: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> mtu 1380
	inet6 fe80::5e4e:92dc:2ab2:a1f9%utun5 prefixlen 64 scopeid 0x14 
	nd6 options=201<PERFORMNUD,DAD>

### Problem Description ###


Please analyze this project structure, description, and errors carefully in order to help me with the issue.

### ./selestino_django/asgi.py ###
"""
ASGI config for selestino_django project.

It exposes the ASGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/howto/deployment/asgi/
"""

import os

from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'selestino_django.settings')

application = get_asgi_application()
### ./selestino_django/__init__.py ###
### ./selestino_django/settings.py ###
"""
Django settings for selestino_django project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r9nspbq2av@znox&-pdu0%o45pg015qv_%k-139&fy7+l$xu5s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'recipes'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'selestino_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'selestino_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
### ./selestino_django/urls.py ###
from django.contrib import admin
from django.urls import path
from recipes import views as recipes_views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', recipes_views.home, name='home'),
    path('search/', recipes_views.search_recipes, name='search_recipes'),
]
### ./selestino_django/wsgi.py ###
"""
WSGI config for selestino_django project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'selestino_django.settings')

application = get_wsgi_application()
### ./append_code.sh ###

        #!/bin/bash

        find . -type d \( -name 'logs' -o -name 'pids' -o -name 'lib-cov' -o -name 'coverage' -o -name '.nyc_output' -o -name '.grunt' -o -name 'bower_components' -o -name 'build' -o -name 'node_modules' -o -name 'jspm_packages' -o -name 'web_modules' -o -name '.npm' -o -name '.rpt2_cache' -o -name '.rts2_cache_cjs' -o -name '.rts2_cache_es' -o -name '.rts2_cache_umd' -o -name '.cache' -o -name '.parcel-cache' -o -name '.next' -o -name 'out' -o -name '.nuxt' -o -name 'dist' -o -name '.temp' -o -name '.serverless' -o -name '.fusebox' -o -name '.dynamodb' -o -name '.vscode-test' -o -name '.yarn' -o -name 'venv' \) -prune -o \
        -type f \( -name "*.go" -o -name "*.yaml" -o -name "*.yml" -o -name "*.md" -o -name "*.sh" -o -name "*.sql" -o -name "Jenkinsfile" -o -name "LICENSE" -o -name "dockerfile" -o -name "go.mod" -o -name "go.sum" -o -name "kubeconfig" -o -name "*.py" \) \
        -not -name "*.log" \
        -not -name "*.tsbuildinfo" \
        -not -name "npm-debug.log*" \
        -not -name "yarn-debug.log*" \
        -not -name "yarn-error.log*" \
        -not -name "lerna-debug.log*" \
        -not -name ".pnpm-debug.log*" \
        -not -name "report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json" \
        -not -name ".lock-wscript" \
        -not -name ".eslintcache" \
        -not -name ".stylelintcache" \
        -not -name "*.pid" \
        -not -name "*.seed" \
        -not -name "*.pid.lock" \
        -not -name "*.tgz" \
        -not -name ".yarn-integrity" \
        -not -name ".env" \
        -not -name ".env.*" \
        -not -name ".node_repl_history" \
        -not -name ".pnp.*" \
        -not -name ".DS_Store" \
        -not -name "jenkins_backup.tar" \
        -not -name "jenkins/jenkins_backup.tar" \
        -exec sh -c 'echo "### {} ###" >> project_overview.txt && cat "{}" >> project_overview.txt' \;

        echo "All code/text has been appended to project_overview.txt."
        ### ./problem.py ###
import os
import subprocess

def create_project_overview():
    overview_file = "project_overview.txt"
    with open(overview_file, "w") as f:
        # Project Description
        f.write("### Project Summary ###\n\n")
        f.write("Project: Recipe Website for Peruvian Dishes\n")
        f.write("Description: A web application where users can input ingredients and receive Peruvian dish recipes.\n\n")

        # Software and Tools
        f.write("### Software and Tools ###\n")
        f.write(f"Python: {subprocess.getoutput('python3 --version')}\n")
        f.write(f"Django: {subprocess.getoutput('django-admin --version')}\n")
        f.write(f"Java: {subprocess.getoutput('java -version 2>&1 | grep openjdk')}\n")
        f.write(f"Spring: {subprocess.getoutput('spring --version')}\n")
        f.write(f"PostgreSQL: {subprocess.getoutput('psql --version')}\n")
        f.write(f"Docker: {subprocess.getoutput('docker --version')}\n")
        kubectl_version_output = subprocess.getoutput("kubectl version --client --short")
        kubectl_version_line = next((line for line in kubectl_version_output.splitlines() if "Client Version" in line), "Kubectl version not found")
        f.write(f"Kubectl: {kubectl_version_line}\n")
        f.write(f"AWS CLI: {subprocess.getoutput('aws --version')}\n")
        f.write(f"Google Cloud SDK: {subprocess.getoutput('gcloud version | head -n 1')}\n")
        f.write(f"Jenkins: {subprocess.getoutput('jenkins --version 2>/dev/null || echo Jenkins not found')}\n")
        f.write(f"Git: {subprocess.getoutput('git --version')}\n\n")

        # Project Directory Structure
        f.write("### Project Directory Structure ###\n")
        f.write(subprocess.getoutput("tree -L 5") + "\n\n")

        # Git Repository Status
        f.write("### Git Repository Status ###\n")
        f.write(f"Current Branch: {subprocess.getoutput('git branch --show-current')}\n")
        f.write("Status:\n")
        f.write(subprocess.getoutput('git status') + "\n\n")

        # Disk Usage
        f.write("### Disk Usage ###\n")
        f.write(subprocess.getoutput('df -h') + "\n\n")

        # Network Configuration
        f.write("### Network Configuration ###\n")
        f.write(subprocess.getoutput('ifconfig') + "\n\n")

        # Get user input for the problem with the code
        problem_message = get_multiline_input("Enter the problem with the code:")
        f.write(f"### Problem Description ###\n{problem_message}\n\n")
        f.write("Please analyze this project structure, description, and errors carefully in order to help me with the issue.\n\n")

        # Append the content of README.md to the file if it exists
        readme_path = "README.md"
        if os.path.exists(readme_path):
            with open(readme_path, "r") as readme_file:
                readme_content = readme_file.read()

            f.write("### README.md ###\n")
            f.write(readme_content)
            f.write("\n\n")

        # Append relevant files to project_overview.txt
        bash_script_content = """
        #!/bin/bash

        find . -type d \\( -name 'logs' -o -name 'pids' -o -name 'lib-cov' -o -name 'coverage' -o -name '.nyc_output' -o -name '.grunt' -o -name 'bower_components' -o -name 'build' -o -name 'node_modules' -o -name 'jspm_packages' -o -name 'web_modules' -o -name '.npm' -o -name '.rpt2_cache' -o -name '.rts2_cache_cjs' -o -name '.rts2_cache_es' -o -name '.rts2_cache_umd' -o -name '.cache' -o -name '.parcel-cache' -o -name '.next' -o -name 'out' -o -name '.nuxt' -o -name 'dist' -o -name '.temp' -o -name '.serverless' -o -name '.fusebox' -o -name '.dynamodb' -o -name '.vscode-test' -o -name '.yarn' -o -name 'venv' \\) -prune -o \\
        -type f \\( -name "*.go" -o -name "*.yaml" -o -name "*.yml" -o -name "*.md" -o -name "*.sh" -o -name "*.sql" -o -name "Jenkinsfile" -o -name "LICENSE" -o -name "dockerfile" -o -name "go.mod" -o -name "go.sum" -o -name "kubeconfig" -o -name "*.py" \\) \\
        -not -name "*.log" \\
        -not -name "*.tsbuildinfo" \\
        -not -name "npm-debug.log*" \\
        -not -name "yarn-debug.log*" \\
        -not -name "yarn-error.log*" \\
        -not -name "lerna-debug.log*" \\
        -not -name ".pnpm-debug.log*" \\
        -not -name "report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json" \\
        -not -name ".lock-wscript" \\
        -not -name ".eslintcache" \\
        -not -name ".stylelintcache" \\
        -not -name "*.pid" \\
        -not -name "*.seed" \\
        -not -name "*.pid.lock" \\
        -not -name "*.tgz" \\
        -not -name ".yarn-integrity" \\
        -not -name ".env" \\
        -not -name ".env.*" \\
        -not -name ".node_repl_history" \\
        -not -name ".pnp.*" \\
        -not -name ".DS_Store" \\
        -not -name "jenkins_backup.tar" \\
        -not -name "jenkins/jenkins_backup.tar" \\
        -exec sh -c 'echo "### {} ###" >> project_overview.txt && cat "{}" >> project_overview.txt' \\;

        echo "All code/text has been appended to project_overview.txt."
        """

        with open("append_code.sh", "w") as bash_script:
            bash_script.write(bash_script_content)

    # Run the Bash script
    subprocess.run(["bash", "append_code.sh"])

    # Clean up the temporary Bash script
    os.remove("append_code.sh")

    # Copy the content of project_overview.txt to the clipboard using pbcopy
    with open(overview_file, "r") as file:
        all_code_content = file.read()

    subprocess.run("pbcopy", text=True, input=all_code_content)

    print("All steps completed and project_overview.txt has been updated and copied to clipboard.")

def get_multiline_input(prompt):
    print(prompt)
    print("Type 'END' on a new line to finish.")
    lines = []
    while True:
        line = input()
        if line.strip().upper() == 'END':
            break
        lines.append(line)
    return "\n".join(lines)

if __name__ == "__main__":
    create_project_overview()
### ./recipes/migrations/__init__.py ###
### ./recipes/migrations/0001_initial.py ###
# Generated by Django 5.0.7 on 2024-08-05 22:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('instructions', models.TextField()),
                ('ingredients', models.ManyToManyField(to='recipes.ingredient')),
            ],
        ),
    ]
### ./recipes/models.py ###
from django.db import models

class Ingredient(models.Model):
    name = models.CharField(max_length=100)

    def __str__(self):
        return self.name

class Recipe(models.Model):
    title = models.CharField(max_length=200)
    ingredients = models.ManyToManyField(Ingredient)
    instructions = models.TextField()

    def __str__(self):
        return self.title
### ./recipes/__init__.py ###
### ./recipes/apps.py ###
from django.apps import AppConfig


class RecipesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'recipes'
### ./recipes/admin.py ###
from django.contrib import admin

# Register your models here.
### ./recipes/tests.py ###
from django.test import TestCase

# Create your tests here.
### ./recipes/views.py ###
from django.shortcuts import render
from .models import Recipe

def home(request):
    return render(request, 'recipes/home.html')

def search_recipes(request):
    if request.method == "POST":
        ingredients = request.POST.getlist('ingredients')
        recipes = Recipe.objects.filter(ingredients__name__in=ingredients).distinct()
        return render(request, 'recipes/search_results.html', {'recipes': recipes})
    return render(request, 'recipes/search.html')
### ./docker-compose.yml ###
version: '3.9'
services:
  db:
    image: postgres:13.1-alpine
    environment:
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database
    ports:
      - "5432:5432"
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - db
### ./manage.py ###
#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'selestino_django.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == '__main__':
    main()
